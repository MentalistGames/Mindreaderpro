{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 const video = document.getElementById("video");\
const output = document.getElementById("output");\
\
async function setupCamera() \{\
  const stream = await navigator.mediaDevices.getUserMedia(\{\
    video: true,\
    audio: false,\
  \});\
  video.srcObject = stream;\
\}\
\
async function loadModel() \{\
  const model = await faceLandmarksDetection.load(\
    faceLandmarksDetection.SupportedPackages.mediapipeFacemesh\
  );\
  return model;\
\}\
\
function getEmotion(faceData) \{\
  // Simple logic based on eyebrow movement\
  const leftEyebrow = faceData[65][1]; // Left eyebrow y-coordinate\
  const rightEyebrow = faceData[295][1]; // Right eyebrow y-coordinate\
  const mouth = faceData[13][1]; // Mouth y-coordinate\
\
  if (leftEyebrow < rightEyebrow && mouth < 200) \{\
    return "You're thinking of something exciting!";\
  \} else if (leftEyebrow > rightEyebrow) \{\
    return "You're focused on something serious.";\
  \} else \{\
    return "You're relaxed and neutral.";\
  \}\
\}\
\
async function main() \{\
  await setupCamera();\
  const model = await loadModel();\
\
  video.addEventListener("loadeddata", async () => \{\
    while (true) \{\
      const predictions = await model.estimateFaces(\{\
        input: video,\
        returnTensors: false,\
        flipHorizontal: false,\
      \});\
\
      if (predictions.length > 0) \{\
        const faceData = predictions[0].scaledMesh;\
        const emotion = getEmotion(faceData);\
        output.textContent = emotion;\
      \} else \{\
        output.textContent = "I can't see your face. Please look at the camera.";\
      \}\
\
      await new Promise((resolve) => setTimeout(resolve, 500)); // Update every 500ms\
    \}\
  \});\
\}\
\
main();\
}